version: '3.9'
services:

  web_dev:
    profiles: [ "dev" ]
    build:
      context: ./frontend
      dockerfile: Docker/Dockerfile.dev

    tty: true
    stdin_open: true
    volumes:
      - /workspace/TimeTracker/frontend/src:/app/src
    ports:
      - 3000:8080
    environment: 
      VUE_APP_API_URL: $test


  web_prod:
    profiles: [ "prod" ]
    build:
      context: ./frontend
      dockerfile: Docker/Dockerfile.prod
      args: 
       VUE_APP_API_URL: $test

    ports:
      - 8080:80
    
  
  api-dev:
    profiles: ["dev"]

    build: ./backend
    ports:
      - 3333:3333
    environment:
      POSTGRESQL_URL: "postgres://postgres:123@db"
      # POSTGRESQL_URL: "postgres://postgres:123@db"
    volumes:
      - /workspace/TimeTracker/backend/src:/app/src
      - ./backend/prisma:/app/prisma
    depends_on:
      - db  

    
  api-prod:
    profiles: ["prod" ]
    tty: true
    stdin_open: true

    build:
      context: ./backend
      args:
        POSTGRESQL_URL: "postgres://postgres:123@db"
    ports:
      - 3333:3333
    environment:
      POSTGRESQL_URL: "postgres://postgres:123@db"   
    command: npm run start:prod
    depends_on:
      - db  


  db:
    profiles: [ "prod", "dev" ]
    image: postgres:13
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: timeTracker
    volumes:
      - /var/lib/postgresql/data

 

 
 
 
  migrate:
    profiles: [ "dev" ,"prod" ]
    build: ./backend

    command: npm run mig
    working_dir: /app
    tty: true
    stdin_open: true
    volumes:
      - ./docker/supabase/volumes/db/migration:/app/prisma/migrations
      # - ./server/prisma/schema.prisma:/app/prisma/schema.prisma
    environment:
      POSTGRESQL_URL: "postgres://postgres:123@db"
    depends_on:
      - db













